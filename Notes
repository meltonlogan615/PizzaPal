# PizzaPal

Step 1.
Views and recognizes a round pizza, gets its size and produces lines to show where to cut for even slices.
  - TODO: Learn how ARKit displays shape objects
  - TODO: Learn how to create shape objects in ARKit
  - TODO: Learn how to overlay a shape shape to match an object of reference
  - TODO: Learn how to create additional line objects within the shape that overlays the object
  
  ## Notes for circle slicing math:
  - 8 slices = 45 degrees rotation, then across the diameter
  - 6 slices = 60 degrees rotation, then across the diameter
  
  Pass as an array of tuples of start-end coordinates?
  
  8 slice = [(0, 180), (45, 225), (90, 270), (135, 315)]
  6 slice = [(0, 180), (60, 240), (120, 300)]
  
  
  Step 2.
  Building on Step 1, recognizes an real world object placed on the pizza and then calculates where other real world objects need to be placed to ensure even distribution.
  - TODO: Learn how ARKit can detect real world evironmental changes
  - TODO: Learn how ARKit can calculate real world distribution.
  
  Notes for real world object density math:
  Circle area = pi(r^2)
  Density = (real world object area / pizza area)
  Distance To and From and To Another: relative distance between a real world object (a) to another real world object (b) and it's distance to other objects within it's local sphere.
  
      Passes          Passes           Fails
        O               O                O
       /|\             /|\              /|\
      / | \           O-O-O            O---O
     O--O--O           \|/              \|/
      \ | /             O                O
       \|/
        O
        
  Middle Out: Start with a 2in diameter circle and gradually growing outward, incorporating additional objects into its calculation.
  
  Step 3.
  Topping recognition.
  Cheese distribution.
  Sauce distribution.
  
  Step 4.
  Recipes
  Pizza Dough
  Pizza Sauces
  Topping Combinations and Styles
  

